// Generated by view binder compiler. Do not edit!
package com.crysapp.student.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.crysapp.student.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogClassPickerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView classList;

  @NonNull
  public final LinearLayout coordinator;

  @NonNull
  public final TextView infoText;

  @NonNull
  public final RecyclerView monthList;

  @NonNull
  public final TextView monthText;

  private DialogClassPickerBinding(@NonNull LinearLayout rootView, @NonNull RecyclerView classList,
      @NonNull LinearLayout coordinator, @NonNull TextView infoText,
      @NonNull RecyclerView monthList, @NonNull TextView monthText) {
    this.rootView = rootView;
    this.classList = classList;
    this.coordinator = coordinator;
    this.infoText = infoText;
    this.monthList = monthList;
    this.monthText = monthText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogClassPickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogClassPickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_class_picker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogClassPickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.class_list;
      RecyclerView classList = ViewBindings.findChildViewById(rootView, id);
      if (classList == null) {
        break missingId;
      }

      LinearLayout coordinator = (LinearLayout) rootView;

      id = R.id.info_text;
      TextView infoText = ViewBindings.findChildViewById(rootView, id);
      if (infoText == null) {
        break missingId;
      }

      id = R.id.month_list;
      RecyclerView monthList = ViewBindings.findChildViewById(rootView, id);
      if (monthList == null) {
        break missingId;
      }

      id = R.id.month_text;
      TextView monthText = ViewBindings.findChildViewById(rootView, id);
      if (monthText == null) {
        break missingId;
      }

      return new DialogClassPickerBinding((LinearLayout) rootView, classList, coordinator, infoText,
          monthList, monthText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
