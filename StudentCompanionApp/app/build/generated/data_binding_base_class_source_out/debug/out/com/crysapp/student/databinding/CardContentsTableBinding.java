// Generated by data binding compiler. Do not edit!
package com.crysapp.student.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.crysapp.student.R;
import com.crysapp.student.models.Class;
import com.crysapp.student.presenter.ItemPresenter;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class CardContentsTableBinding extends ViewDataBinding {
  @NonNull
  public final TextView corse;

  @NonNull
  public final FrameLayout image;

  @NonNull
  public final ImageView images;

  @NonNull
  public final CardView midCard;

  @NonNull
  public final TextView times;

  @Bindable
  protected ItemPresenter mPresenter;

  @Bindable
  protected Class mItem;

  protected CardContentsTableBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView corse, FrameLayout image, ImageView images, CardView midCard, TextView times) {
    super(_bindingComponent, _root, _localFieldCount);
    this.corse = corse;
    this.image = image;
    this.images = images;
    this.midCard = midCard;
    this.times = times;
  }

  public abstract void setPresenter(@Nullable ItemPresenter presenter);

  @Nullable
  public ItemPresenter getPresenter() {
    return mPresenter;
  }

  public abstract void setItem(@Nullable Class item);

  @Nullable
  public Class getItem() {
    return mItem;
  }

  @NonNull
  public static CardContentsTableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.card_contents_table, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static CardContentsTableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<CardContentsTableBinding>inflateInternal(inflater, R.layout.card_contents_table, root, attachToRoot, component);
  }

  @NonNull
  public static CardContentsTableBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.card_contents_table, null, false, component)
   */
  @NonNull
  @Deprecated
  public static CardContentsTableBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<CardContentsTableBinding>inflateInternal(inflater, R.layout.card_contents_table, null, false, component);
  }

  public static CardContentsTableBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static CardContentsTableBinding bind(@NonNull View view, @Nullable Object component) {
    return (CardContentsTableBinding)bind(component, view, R.layout.card_contents_table);
  }
}
